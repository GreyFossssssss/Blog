(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{447:function(a,t,e){"use strict";e.r(t);var v=e(2),r=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[a._v("#")]),a._v(" 是什么")]),a._v(" "),t("p",[a._v("Vue.js（/vjuː/，或简称为 Vue）是一个用于创建用户界面的开源 JavaScript 框架，也是一个创建单页应用的 Web 应用框架。2016 年一项针对 JavaScript 的调查表明，Vue 有着 89%的开发者满意度。在 GitHub 上，该项目平均每天能收获 95 颗星，为 Github 有史以来星标数第 3 多的项目同时也是一款流行的 JavaScript 前端框架，旨在更好地组织与简化 Web 开发。Vue 所关注的核心是 MVC 模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互 PS: Vue 作者尤雨溪是在为 AngularJS 工作之后开发出了这一框架。他声称自己的思路是提取 Angular 中为自己所喜欢的部分，构建出一款相当轻量的框架最早发布于 2014 年 2 月")]),a._v(" "),t("h1",{attrs:{id:"核心特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心特性"}},[a._v("#")]),a._v(" 核心特性")]),a._v(" "),t("h2",{attrs:{id:"数据驱动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动"}},[a._v("#")]),a._v(" 数据驱动")]),a._v(" "),t("p",[a._v("MVVM 表示的是 Model-View-ViewModel")]),a._v(" "),t("ul",[t("li",[a._v("Model：模型层，负责处理业务逻辑以及和服务器端进行交互")]),a._v(" "),t("li",[a._v("View：视图层：负责将数据模型转化为 UI 展示出来，可以简单的理解为 HTML 页面")]),a._v(" "),t("li",[a._v("ViewModel：视图模型层，用来连接 Model 和 View，是 Model 和 View 之间的通信桥梁")])]),a._v(" "),t("h2",{attrs:{id:"组件化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[a._v("#")]),a._v(" 组件化")]),a._v(" "),t("p",[a._v("什么是组件化一句话来说就是把图形、非图形的各种逻辑均抽象为一个统一的概念（组件）来实现开发的模式，在 Vue 中每一个.vue 文件都可以视为一个组件")]),a._v(" "),t("h3",{attrs:{id:"组件化的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件化的优势"}},[a._v("#")]),a._v(" 组件化的优势")]),a._v(" "),t("ul",[t("li",[a._v("降低整个系统的耦合度，在保持接口不变的情况下，我们可以替换不同的组件快速完成需求，例如输入框，可以替换为日历、时间、范围等组件作具体的实现")]),a._v(" "),t("li",[a._v("调试方便，由于整个系统是通过组件组合起来的，在出现问题的时候，可以用排除法直接移除组件，或者根据报错的组件快速定位问题，之所以能够快速定位，是因为每个组件之间低耦合，职责单一，所以逻辑会比分析整个系统要简单")]),a._v(" "),t("li",[a._v("提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，所以对代码进行优化可获得系统的整体升级")])]),a._v(" "),t("h2",{attrs:{id:"指令系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令系统"}},[a._v("#")]),a._v(" 指令系统")]),a._v(" "),t("p",[a._v("解释：指令 (Directives) 是带有 v- 前缀的特殊属性作用：当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM")]),a._v(" "),t("h1",{attrs:{id:"vue-跟-react-的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-跟-react-的对比"}},[a._v("#")]),a._v(" vue 跟 react 的对比")]),a._v(" "),t("h2",{attrs:{id:"相同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[a._v("#")]),a._v(" 相同点")]),a._v(" "),t("ul",[t("li",[a._v("都有组件化思想")]),a._v(" "),t("li",[a._v("都支持服务器端渲染")]),a._v(" "),t("li",[a._v("都有 Virtual DOM（虚拟 dom）")]),a._v(" "),t("li",[a._v("数据驱动视图")]),a._v(" "),t("li",[a._v("都有支持 native 的方案：Vue 的 weex、React 的 React native")]),a._v(" "),t("li",[a._v("都有自己的构建工具：Vue 的 vue-cli、React 的 Create React App")])]),a._v(" "),t("h2",{attrs:{id:"区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[a._v("#")]),a._v(" 区别")]),a._v(" "),t("ul",[t("li",[a._v("数据流向的不同。react 从诞生开始就推崇单向数据流，而 Vue 是双向数据流")]),a._v(" "),t("li",[a._v("数据变化的实现原理不同。react 使用的是不可变数据，而 Vue 使用的是可变的数据")]),a._v(" "),t("li",[a._v("组件化通信的不同。react 中我们通过使用回调函数来进行通信的，而 Vue 中子组件向父组件传递消息有两种方式：事件和回调函数")]),a._v(" "),t("li",[a._v("diff 算法不同。react 主要使用 diff 队列保存需要更新哪些 DOM，得到 patch 树，再统一操作批量更新 DOM。Vue 使用双向指针，边对比，边更新 DOM")])])])}),[],!1,null,null,null);t.default=r.exports}}]);